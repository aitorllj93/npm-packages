name: Deploy
on:
  pull_request:
    branches:
      - main
    types: [ closed ]

jobs:
  build:
    # Setup OS and Node Version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Latest nodes only
        node-version: [ 16.x ]

    steps:
      # Checkout code
      - name: Checkout Code
        if: github.event.pull_request.merged == true && contains(github.event.commits[0].message, '[skip-ci]') == false
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install environment
        run: npm ci

      # Make sure we have all branches
      - name: Fetch other branches
        run: git fetch --no-tags --prune --depth=5 origin main

      - name: Deploy
        if: github.event.pull_request.merged == true && contains(github.event.commits[0].message, '[skip-ci]') == false
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          chmod +x ./.github/scripts/publish-libraries.sh
          ./.github/scripts/publish-libraries.sh

      #- name: Build Docs
      #  if: github.event.pull_request.merged == true && contains(github.event.commits[0].message, '[skip-ci]') == false
      #  run: npm run docs

      - name: Commit files
        if: github.event.pull_request.merged == true && contains(github.event.commits[0].message, '[skip-ci]') == false
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Release [skip-ci]" -a || true

      - name: Push changes
        if: github.event.pull_request.merged == true && contains(github.event.commits[0].message, '[skip-ci]') == false
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACTION_AUTH_TOKEN }}
          tags: true
          force: true
